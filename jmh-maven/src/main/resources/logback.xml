<?xml version="1.0" encoding="UTF-8"?>

<!-- 级别从高到低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
<!-- 日志输出规则 根据当前ROOT 级别，日志输出时，级别高于root默认的级别时 会输出 -->
<!-- 以下 每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志 -->
<!-- scan 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 -->
<!-- scanPeriod 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

	<!-- 定义日志文件 输出位置可相对、和绝对路径 -->
	<property name="log_dir" value="/logs/project" />
	<!-- 日志最大的历史 30天 -->
	<property name="maxHistory" value="30" />

	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>
				<!-- 设置日志输出格式 -->
				%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger - %msg%n
			</pattern>
		</encoder>
	</appender>

	<appender name="FILE"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<encoder>
			<pattern>
				<!-- 设置日志输出格式 -->
				%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger - %msg%n
			</pattern>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志输出位置 可相对、和绝对路径 -->
			<fileNamePattern>
				${log_dir}/%d{yyyy-MM-dd}/project-log.log
			</fileNamePattern>
			<maxFileSize>${LOG_FILE_MAX_SIZE:-10MB}</maxFileSize>
			<maxHistory>${maxHistory}</maxHistory>
		</rollingPolicy>
	</appender>

	<root level="INFO">
		<appender-ref ref="CONSOLE" />
		<appender-ref ref="FILE" />
	</root>


</configuration>