<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.9.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>docker-images-demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>docker-images-demo</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>1.8</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <!-- 生成镜像相关配置 -->
                <configuration>
                    <settings>
                        <servers>
                            <server>
                                <!--maven的pom中可以根据这个id找到这个server节点的配置-->
                                <id>docker-aliyun</id>
                                <!--阿里云注册的账号-->
                                <username>xjq111006</username>
                                <password>xjq111006</password>
                            </server>
                        </servers>
                    </settings>
                    <!-- 将forceTags设为true，这样就会覆盖构建相同标签的镜像 -->
                    <forceTags>true</forceTags>
                    <!-- 远程docker宿主机地址 -->
                    <dockerHost>http://192.168.3.57:2375</dockerHost>
                    <!-- maven的settings.xml文件中server节点配置的id名称 -->
                    <serverId>docker-aliyun</serverId>
                    <!-- 镜像名称，阿里云镜像仓库地址 -->
                    <imageName>registry.cn-hangzhou.aliyuncs.com/woaijava/microservice:${project.version}</imageName>
                    <!-- 基础镜像 -->
                    <baseImage>ibmjava</baseImage>
                    <!-- 类似于Dockerfile的ENTRYPOINT指令 -->
                    <entryPoint>["java","-jar","/${project.artifactId}-${project.version}.jar"]</entryPoint>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <!-- 指定要复制的根目录，这里是target目录 -->
                            <directory>${project.build.directory}</directory>
                            <include>${project.artifactId}-${project.version}.jar</include>
                        </resource>
                    </resources>

                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
